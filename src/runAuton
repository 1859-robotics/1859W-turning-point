void runAuton() {
if(w::auton_selector::selectedTile == TILE_BLUE_B && "park" == w::auton_selector::selectedAuton) {



posTracker.setPos({ 0, 0 }, 180); //sets the starting position of the robot

robot.moveFor(20);  // moves forward
robot.turnToFace(-90);  //faces platform
robot.moveFor(22, { 25, 0, .1, MAX_SPEED, MIN_SPEED });
} else if(w::auton_selector::selectedTile == TILE_BLUE_A && "post&cap" == w::auton_selector::selectedAuton) {


posTracker.setPos({ 0, 0 }, 180); //sets the starting position of the robot

// shoot high flag
robot.flyUp(310, [](float rpm) -> void {
 INTAKE_SET(127);
 pros::delay(300);
 INTAKE_SET(0);
});

// get next ball & flip first cap

robot.turnToFace(276);
robot.combineSet(false);
robot.moveFor(36);
robot.feedBall(2000);
robot.turnToFace(270);
robot.combineSet(true);

robot.moveFor(-33);
robot.turnToFace(180);
robot.combineSet(false);

robot.flyUp(480, [](float rpm) -> void {
 INTAKE_SET(127);
 pros::delay(300);
 INTAKE_SET(0);
});

robot.turnToFace(225);
robot.combineSet(true);
robot.moveFor(34);
robot.moveFor(-35);
robot.turnToFace(180);
} else if(w::auton_selector::selectedTile == TILE_BLUE_A && "post&park" == w::auton_selector::selectedAuton) {


posTracker.setPos({ 0, 0 }, 180); //sets the starting position of the robot

// shoot high flag
robot.flyUp(310, [](float rpm) -> void {
 INTAKE_SET(127);
 pros::delay(300);
 INTAKE_SET(0);
});

// get next ball & flip first cap

robot.turnToFace(276);
robot.combineSet(false);
robot.moveFor(36);
robot.feedBall(2000);
robot.turnToFace(270);
robot.combineSet(true);

robot.moveFor(-33);
robot.turnToFace(180);
robot.combineSet(false);

robot.flyUp(480, [](float rpm) -> void {
 INTAKE_SET(127);
 pros::delay(300);
 INTAKE_SET(0);
});

robot.moveFor(-22);
robot.turnToFace(270);

robot.moveFor(20, { 25, 0, .1, MAX_SPEED, MIN_SPEED });


rightDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
rightDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
} else if(w::auton_selector::selectedTile == TILE_RED_B && "park" == w::auton_selector::selectedAuton) {



posTracker.setPos({ 0, 0 }, 180); //sets the starting position of the robot

// park
robot.moveFor(20);
robot.turnToFace(90);
robot.moveFor(22, { 25, 0, .1, MAX_SPEED, MIN_SPEED });
} else if(w::auton_selector::selectedTile == TILE_RED_A && "post&cap" == w::auton_selector::selectedAuton) {
 
 
posTracker.setPos({ 0, 0 }, 180); //sets the starting position of the robot

// shoot high flag
robot.flyUp(300, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(300);
  INTAKE_SET(0);
});

// get next ball & flip first cap

robot.turnToFace(84);
robot.combineSet(false);
robot.moveFor(36);
robot.feedBall(2000);
robot.turnToFace(90);
robot.combineSet(true);

robot.moveFor(-33);
robot.turnToFace(180);
robot.combineSet(false);

robot.flyUp(480, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(300);
  INTAKE_SET(0);
});

robot.turnToFace(135);
robot.combineSet(true);
robot.moveFor(34, { 25, 0, .1, MAX_SPEED, MIN_SPEED });
robot.moveFor(-34);
robot.turnToFace(180);
} else if(w::auton_selector::selectedTile == TILE_RED_A && "post park" == w::auton_selector::selectedAuton) {
 
 
posTracker.setPos({ 0, 0 }, 180); //sets the starting position of the robot

// shoot high flag
robot.flyUp(310, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(300);
  INTAKE_SET(0);
});

// get next ball & flip first cap

robot.turnToFace(84);
robot.combineSet(false);
robot.moveFor(36);
robot.feedBall(2000);
robot.turnToFace(90);
robot.combineSet(true);

robot.moveFor(-33);
robot.turnToFace(180);
robot.combineSet(false);

robot.flyUp(480, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(300);
  INTAKE_SET(0);
});

robot.moveFor(-21);
robot.turnToFace(90);

robot.moveFor(20, { 25, 0, .1, MAX_SPEED, MIN_SPEED });


rightDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
rightDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
} else if(w::auton_selector::selectedTile == TILE_RED_A && "MICHA" == w::auton_selector::selectedAuton) {


posTracker.setPos({ 0, 0 }, 180); //sets the starting position of the robot

// shoot high flag
robot.flyUp(310, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(300);
  INTAKE_SET(0);
});

// get next ball & flip first cap

robot.turnToFace(84);
robot.combineSet(false);
robot.moveFor(36);
robot.feedBall(2000);
robot.turnToFace(90);
robot.combineSet(true);

robot.moveFor(-33);
robot.turnToFace(180);
robot.combineSet(false);

robot.flyUp(480, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(300);
  INTAKE_SET(0);
});

robot.moveFor(-21);
robot.turnToFace(90);

robot.moveFor(18, { 25, 0, .1, MAX_SPEED, MIN_SPEED });


rightDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
rightDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
} else if(w::auton_selector::selectedTile == TILE_RED_A && "skills old" == w::auton_selector::selectedAuton) {
 
 
// DO NOT USE
// setup
posTracker.setPos({ 0, 0 }, 180); //sets the starting position of the robot

// shoot high flag
robot.flyUp(310, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(200);
  INTAKE_SET(0);
});

// // get next ball & flip first cap
robot.turnToFace(90);
robot.combineSet(false);
robot.moveFor(34);
robot.feedBall(2000);

// shoot ball

robot.moveFor(-34);
robot.turnToFace(180);

robot.flyUp(480, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(200);
  INTAKE_SET(0);
});

robot.moveFor(-20);
robot.turnToFace(90);

robot.moveFor(42);

rightDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
rightDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
} else if(w::auton_selector::selectedTile == TILE_RED_A && "skills 10" == w::auton_selector::selectedAuton) {
 
 
posTracker.setPos({ 0, 0 }, 180); //sets the starting position of the robot

// shoot high flag
robot.flyUp(310, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(300);
  INTAKE_SET(0);
});

// get next ball & flip first cap

robot.turnToFace(84);
robot.combineSet(false);
robot.moveFor(36);
robot.feedBall(2000);
robot.turnToFace(90);
robot.combineSet(true);

robot.moveFor(-33);
robot.turnToFace(180);
robot.combineSet(false);

robot.flyUp(480, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(300);
  INTAKE_SET(0);
});

robot.moveFor(-21);
robot.turnToFace(90);

robot.moveFor(40, { 25, 0, .1, MAX_SPEED, MIN_SPEED });


rightDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
rightDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
} else if(w::auton_selector::selectedTile == TILE_RED_A && "skills 14" == w::auton_selector::selectedAuton) {


posTracker.setPos({ 0, 0 }, 180); //sets the starting position of the robot

// shoot high flag
robot.flyUp(310, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(300);
  INTAKE_SET(0);
});

// get next ball & flip first cap

robot.turnToFace(84);
robot.combineSet(false);
robot.moveFor(36);
robot.feedBall(2000);
robot.turnToFace(90);
robot.combineSet(true);
robot.moveFor(12, { 25, 0, .1, MAX_SPEED, MIN_SPEED });
robot.turnToFace(90);
robot.moveFor(-12);
robot.combineSet(false);
robot.turnToFace(90);
robot.moveFor(-33);
robot.turnToFace(180);
robot.combineSet(false);

robot.flyUp(480, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(300);
  INTAKE_SET(0);
});

robot.moveFor(-41);
robot.turnToFace(90);
robot.moveFor(40);

robot.feedBall(2000);
robot.turnToFace(90);
robot.combineSet(true);
robot.moveFor(12, { 25, 0, .1, MAX_SPEED, MIN_SPEED });
robot.combineSet(false);
robot.turnToFace(100);
robot.moveFor(-12.5);
robot.turnToFace(180);

robot.flyUp(370, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(300);
  INTAKE_SET(0);
});

robot.turnToFace(90);
robot.moveFor(-40);
robot.turnToFace(0);
robot.moveFor(-23);
robot.turnToFace(90);
robot.moveFor(40, { 25, 0, .1, MAX_SPEED, MIN_SPEED });

rightDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
rightDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
} else if(w::auton_selector::selectedTile == TILE_RED_B && "skills 14" == w::auton_selector::selectedAuton) {
// 
// 

// setup
posTracker.setPos({ 0, 0 }, 180); //sets the starting position of the robot

// shoot high flag
robot.flyUp(310, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(200);
  INTAKE_SET(0);
});

// // get next ball & flip first cap
robot.turnToFace(90);
robot.combineSet(false);
robot.moveFor(34);
robot.feedBall(2000);

// shoot ball
robot.moveFor(-34);
robot.turnToFace(180);
robot.flyUp(480, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(200);
  INTAKE_SET(0);
});

// park
robot.moveFor(-20);
robot.turnToFace(90);
robot.moveFor(42);
// set drive breaks
rightDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
rightDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
}}