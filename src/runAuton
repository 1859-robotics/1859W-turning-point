void runAuton() {
if(w::auton_selector::selectedTile == TILE_BLUE_B && "park" == w::auton_selector::selectedAuton) {





rightDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
rightDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
} else if(w::auton_selector::selectedTile == TILE_BLUE_A && "Allpost&cap" == w::auton_selector::selectedAuton) {


posTracker.setPos({ 0, 0 }, 180); //sets the starting position of the robot

// shoot high flag
robot.flyUp(290, [](float rpm) -> void {
 INTAKE_SET(127);
 pros::delay(300);
 INTAKE_SET(0);
});

// get next ball & flip first cap

robot.turnToFace(275);
robot.combineSet(true);
robot.moveFor(39);
robot.feedBall(2000);
robot.turnToFace(270);

robot.moveFor(-35);
robot.turnToFace(180);
robot.moveFor(-6);
robot.flyUp(520, [](float rpm) -> void {
 INTAKE_SET(127);
 pros::delay(350);
 INTAKE_SET(0);
});
robot.moveFor(6);
robot.turnToFace(178);
//robot.combineSet(true);
robot.moveFor(39);
robot.moveFor(-23);

robot.turnToFace(270);
robot.combineSet(false);
robot.moveFor(23, { 25, 0, .1, MAX_SPEED, MIN_SPEED });
robot.moveFor(-10);
} else if(w::auton_selector::selectedTile == TILE_BLUE_A && "Allpost&Park" == w::auton_selector::selectedAuton) {


posTracker.setPos({ 0, 0 }, 180); //sets the starting position of the robot

// shoot high flag
robot.flyUp(290, [](float rpm) -> void {
 INTAKE_SET(127);
 pros::delay(300);
 INTAKE_SET(0);
});

// get next ball & flip first cap

robot.turnToFace(273);
robot.moveFor(40);
robot.feedBall(2000);
robot.turnToFace(270);

robot.moveFor(-36);
robot.turnToFace(180);
robot.moveFor(-6);
robot.flyUp(520, [](float rpm) -> void {
 INTAKE_SET(127);
 pros::delay(350);
 INTAKE_SET(0);
});
robot.moveFor(6);
robot.turnToFace(180);

robot.moveFor(18);
robot.turnToFace(270);

robot.combineSet(false);
robot.moveFor(26);

robot.moveFor(-26);
robot.turnToFace(180);

robot.moveFor(-42);

robot.turnToFace(270);
robot.combineSet(true);
robot.moveFor(30, { 50, 0, .1, MAX_SPEED, MIN_SPEED });

rightDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
rightDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
} else if(w::auton_selector::selectedTile == TILE_RED_A && "SkillsAllpost&cap" == w::auton_selector::selectedAuton) {


posTracker.setPos({ 0, 0 }, 180); //sets the starting position of the robot

// shoot high flag
robot.flyUp(290, [](float rpm) -> void {
 INTAKE_SET(127);
 pros::delay(300);
 INTAKE_SET(0);
});

// get next ball & flip first cap

robot.turnToFace(87);
robot.moveFor(40);
robot.feedBall(2000);
robot.turnToFace(90);

robot.moveFor(-36);
robot.turnToFace(180);
robot.moveFor(-5);
robot.flyUp(520, [](float rpm) -> void {
 INTAKE_SET(127);
 pros::delay(350);
 INTAKE_SET(0);
});



robot.moveFor(6);
robot.turnToFace(187);
robot.combineSet(true);
robot.moveFor(45);
robot.moveFor(-4, { 25, 0, .1, MAX_SPEED, MIN_SPEED });
robot.turnToFace(182);
robot.moveFor(-38);

robot.turnToFace(92);
robot.combineSet(false);
robot.moveFor(48);
robot.turnToFace(92);
robot.moveFor(-30);
robot.turnToFace(180);

robot.moveFor(23);
robot.moveFor(-10);

robot.turnToFace(160);
robot.moveFor(-35);
robot.turnToFace(90);

leftDriveB.tare_position();
leftDriveF.tare_position();
rightDriveB.tare_position();
rightDriveF.tare_position();
robot.combineSet(true);
while(leftDriveB.get_position() < 4650)
{
  LEFT_DRIVE_SET(240);
  RIGHT_DRIVE_SET(240);

}
LEFT_DRIVE_SET(0);
RIGHT_DRIVE_SET(0);


rightDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
rightDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
} else if(w::auton_selector::selectedTile == TILE_RED_A && "SkillsAAAAAAAAAAAAAA" == w::auton_selector::selectedAuton) {


posTracker.setPos({ 0, 0 }, 180); //sets the starting position of the robot

// shoot high flag
robot.flyUp(290, [](float rpm) -> void {
 INTAKE_SET(127);
 pros::delay(300);
 INTAKE_SET(0);
});

// get next ball & flip first cap

robot.turnToFace(87);
robot.combineSet(true);
robot.moveFor(40);
robot.feedBall(2000);
robot.turnToFace(90);

robot.moveFor(-36);
robot.turnToFace(180);
robot.moveFor(-6);
robot.flyUp(520, [](float rpm) -> void {
 INTAKE_SET(127);
 pros::delay(350);
 INTAKE_SET(0);
});



robot.moveFor(6);
robot.turnToFace(187);
robot.combineSet(true);
robot.moveFor(45);
robot.moveFor(-4, { 25, 0, .1, MAX_SPEED, MIN_SPEED });
robot.turnToFace(182);
robot.moveFor(-40);

robot.turnToFace(92);
robot.combineSet(false);
robot.moveFor(19);
robot.turnToFace(180);
robot.moveFor(20);
robot.turnToFace(93);

robot.moveFor(72);
robot.turnToFace(3);
robot.moveFor(17);
robot.turnToFace(275);
robot.combineSet(true);
robot.moveFor(30);
robot.combineSet(true);
robot.feedBall(2000);
robot.moveFor(-20);
robot.turnToFace(180);
robot.flyUp(520, [](float rpm) -> void {
 INTAKE_SET(127);
 pros::delay(350);
 INTAKE_SET(0);
});
robot.turnToFace(215);

robot.moveFor(-20);
robot.turnToFace(180);
robot.moveFor(-8);
robot.turnToFace(270);

leftDriveB.tare_position();
leftDriveF.tare_position();
rightDriveB.tare_position();
rightDriveF.tare_position();
robot.combineSet(true);
while(leftDriveB.get_position() < 4600)
{
  LEFT_DRIVE_SET(240);
  RIGHT_DRIVE_SET(240);

}
LEFT_DRIVE_SET(0);
RIGHT_DRIVE_SET(0);


rightDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
rightDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
} else if(w::auton_selector::selectedTile == TILE_RED_B && "park" == w::auton_selector::selectedAuton) {
//
//

posTracker.setPos({ 0, 0 }, 90); //sets the starting position of the robot



robot.turnToFace(65);
robot.liftTo(3975);
robot.moveFor(39);
robot.liftTo(3400,175);
robot.moveFor(-14);
robot.liftTo(2000,200);
robot.turnToFace(86);
robot.moveFor(-34);
robot.liftTo(1000);
robot.moveFor(10);
robot.combineSet(true);
robot.turnToFace(95);
robot.moveFor(20);
robot.turnToFace(180);
robot.moveFor(28, { 50, 0, .1, MAX_SPEED, MIN_SPEED });


rightDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
rightDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);


rightDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
rightDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
} else if(w::auton_selector::selectedTile == TILE_RED_A && "post&cap" == w::auton_selector::selectedAuton) {
 //
 //
posTracker.setPos({ 0, 0 }, 180); //sets the starting position of the robot

// shoot high flag
robot.flyUp(300, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(300);
  INTAKE_SET(0);
});

// get next ball & flip first cap

robot.turnToFace(84);
robot.combineSet(false);
robot.moveFor(36);
robot.feedBall(2000);
robot.turnToFace(92);
robot.combineSet(true);

robot.moveFor(-33);
robot.turnToFace(180);
robot.combineSet(false);

robot.flyUp(480, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(300);
  INTAKE_SET(0);
});

robot.turnToFace(135);
robot.combineSet(true);
robot.moveFor(34, { 25, 0, .1, MAX_SPEED, MIN_SPEED });
robot.moveFor(-34);
robot.turnToFace(180);
} else if(w::auton_selector::selectedTile == TILE_RED_A && "Allpost&cap" == w::auton_selector::selectedAuton) {
 
 
posTracker.setPos({ 0, 0 }, 180); //sets the starting position of the robot

// shoot high flag
robot.flyUp(290, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(300);
  INTAKE_SET(0);
});

// get next ball & flip first cap

robot.turnToFace(87);
robot.combineSet(true);
robot.moveFor(39);
robot.feedBall(2000);
robot.turnToFace(90);

robot.moveFor(-35);
robot.turnToFace(180);
robot.moveFor(-6);
robot.flyUp(520, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(350);
  INTAKE_SET(0);
});
robot.moveFor(6);
robot.turnToFace(187);
//robot.combineSet(true);
robot.moveFor(39);
robot.moveFor(-23);

robot.turnToFace(90);
robot.combineSet(false);
robot.moveFor(23, { 25, 0, .1, MAX_SPEED, MIN_SPEED });
robot.moveFor(-10);
} else if(w::auton_selector::selectedTile == TILE_RED_A && "Allpost&Park" == w::auton_selector::selectedAuton) {


posTracker.setPos({ 0, 0 }, 180); //sets the starting position of the robot

// shoot high flag
robot.flyUp(300, [](float rpm) -> void {
 INTAKE_SET(127);
 pros::delay(300);
 INTAKE_SET(0);
});

// get next ball & flip first cap

robot.turnToFace(87);
robot.moveFor(40);
robot.feedBall(2000);
robot.turnToFace(90);

robot.moveFor(-36);
robot.turnToFace(180);
robot.moveFor(-6);
robot.flyUp(520, [](float rpm) -> void {
 INTAKE_SET(127);
 pros::delay(350);
 INTAKE_SET(0);
});
robot.moveFor(6);
robot.turnToFace(180);

robot.moveFor(18);
robot.turnToFace(90);

robot.combineSet(false);
robot.moveFor(26);

robot.moveFor(-26);
robot.turnToFace(180);

robot.moveFor(-42);

robot.turnToFace(90);
robot.combineSet(true);
robot.moveFor(30, { 50, 0, .1, MAX_SPEED, MIN_SPEED });

rightDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
rightDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
} else if(w::auton_selector::selectedTile == TILE_RED_B && "skills NEW14" == w::auton_selector::selectedAuton) {
 //
 //
posTracker.setPos({ 0, 0 }, 180); //sets the starting position of the robot


// shoot high flag
robot.flyUp(360, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(300);
  INTAKE_SET(0);
});

robot.moveFor(-5);
robot.turnToFace(90);


robot.moveFor(48, { 25, 0, .1, MAX_SPEED, MIN_SPEED });
robot.feedBall(2000);
// robot.combineSet(true);
robot.turnToFace(90);
// robot.moveFor(12, { 25, 0, .1, MAX_SPEED, MIN_SPEED });

robot.turnToFace(90);
robot.moveFor(-48);
robot.turnToFace(180);
robot.moveFor(54);
robot.turnToFace(183);

robot.flyUp(380, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(300);
  INTAKE_SET(0);
});
robot.turnToFace(180);

robot.moveFor(-14);
robot.turnToFace(90);
robot.combineSet(true);
robot.moveFor(48, { 25, 0, .1, MAX_SPEED, MIN_SPEED });

robot.feedBall(2000);
//robot.combineSet(true);
robot.turnToFace(90);

robot.moveFor(-40);
robot.turnToFace(145);
robot.moveFor(12);


robot.flyUp(520, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(300);
  INTAKE_SET(0);
});

robot.moveFor(-20);
robot.turnToFace(180);
robot.moveFor(-14);
robot.turnToFace(90);
robot.moveFor(-8);

INTAKE_SET(-127);

robot.moveFor(47, { 25, 0, .1, MAX_SPEED, MIN_SPEED });

rightDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
rightDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
} else if(w::auton_selector::selectedTile == TILE_RED_B && "skills 14" == w::auton_selector::selectedAuton) {
// 
// 

// setup
posTracker.setPos({ 0, 0 }, 180); //sets the starting position of the robot

// shoot high flag
robot.flyUp(310, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(200);
  INTAKE_SET(0);
});

// // get next ball & flip first cap
robot.turnToFace(90);
robot.combineSet(false);
robot.moveFor(34);
robot.feedBall(2000);

// shoot ball
robot.moveFor(-34);
robot.turnToFace(180);
robot.flyUp(480, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(200);
  INTAKE_SET(0);
});

// park
robot.moveFor(-20);
robot.turnToFace(90);
robot.moveFor(42);
// set drive breaks
rightDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
rightDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
}}