 //#meta name skills-20
 //#meta tile RED_A
posTracker.setPos({ 0, 0 }, 180); //sets the starting position of the robot

// shoot high flag
robot.flyUp(380, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(330);
  INTAKE_SET(0);
});
//2
// get next ball & flip first cap

robot.combineSet(false);
robot.moveFor(-40);
robot.turnToFace(90);
robot.moveFor(36);
robot.feedBall(2000);
robot.turnToFace(90);
robot.combineSet(true);
robot.moveFor(15, { 25, 0, .1, MAX_SPEED, MIN_SPEED });
//3
robot.turnToFace(90);
robot.combineSet(false);
robot.moveFor(-50);
robot.turnToFace(180);
robot.moveFor(36);

robot.flyUp(400, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(310);
  INTAKE_SET(0);
});
//5
robot.turnToFace(90);
robot.moveFor(38);
robot.feedBall(2000);
robot.turnToFace(90);
robot.combineSet(true);
robot.moveFor(8, { 25, 0, .1, MAX_SPEED, MIN_SPEED });
//6
robot.turnToFace(95);
robot.moveFor(-4);
robot.turnToFace(180);

robot.flyUp(400, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(310);
  INTAKE_SET(0);
});
//8
robot.turnToFace(90);
robot.moveFor(-10);

robot.turnToFace(225);
robot.combineSet(true);
robot.moveFor(24, { 25, 0, .1, MAX_SPEED, MIN_SPEED });
//9
robot.moveFor(-12);
robot.turnToFace(90);
robot.combineSet(true);
robot.moveFor(48);
//10
robot.turnToFace(90);
robot.moveFor(-18);
robot.turnToFace(45);
robot.combineSet(false);
robot.moveFor(36);
robot.turnToFace(270);
robot.moveFor(30);
robot.feedBall(2000);
robot.combineSet(true);
robot.moveFor(10, { 25, 0, .1, MAX_SPEED, MIN_SPEED });
//11
robot.combineSet(false);
robot.moveFor(-40);
robot.turnToFace(180);
robot.flyUp(400, [](float rpm) -> void {
  INTAKE_SET(127);
  pros::delay(310);
  INTAKE_SET(0);
});
//13
robot.moveFor(-36);
robot.turnToFace(315);
robot.combineSet(true);
robot.moveFor(24, { 25, 0, .1, MAX_SPEED, MIN_SPEED });
//14
robot.moveFor(-24);
robot.turnToFace(0);
robot.moveFor(-24);
robot.turnToFace(270);
robot.moveFor(44, { 25, 0, .1, MAX_SPEED, MIN_SPEED });
//20
rightDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
rightDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveF.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
leftDriveB.set_brake_mode(pros::E_MOTOR_BRAKE_HOLD);
